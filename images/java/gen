#!/bin/bash
#
# Utility to generate docker files and build java images.
#
# To generate docker files run './update.sh generate'
# To build images run './update.sh build'
#

set -eo pipefail

BUILDER_VERSION="1.0.0"

JOLOKIA_VERSION="1.3.2"
JOLOKIA_DOWNLOAD="http://search.maven.org/remotecontent?filepath=org/jolokia/jolokia-jvm/${JOLOKIA_VERSION}/jolokia-jvm-${JOLOKIA_VERSION}-agent.jar"
JOLOKIA_PORT="7777"
JOLOKIA_DEFAULT_HOST="0.0.0.0"
JOLOKIA_DEFAULT_CONTEXT="/"
JOLOKIA_DEFAULT_DISCOVERY="false"

J4LOG_VERSION="v0.1.0-alpha"
J4LOG_DOWNLOAD="https://github.com/camilobermudez85/j4log/releases/download/${J4LOG_VERSION}/j4log-agent-${J4LOG_VERSION}.jar"

MAVEN_VERSION="3.3.3"
MAVEN_HOME="/usr/share/maven"
MAVEN_DOWNLOAD="http://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz"

GRADLE_VERSION="2.6"
GRADLE_HOME="/usr/share/gradle"
GRADLE_DOWNLOAD="https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-all.zip"

HOTSWAP_ZIP="HotswapAgent-0.3.zip"
HOTSWAP_BASE="https://github.com/HotswapProjects/HotswapAgent/releases/download/RELEASE-0.3"

JDWP_ADDRESS="9009"
JDWP_DEFAULT_SERVER="y"
JDWP_DEFAULT_SUSPEND="n"

declare -A java_tags=(
    ['openjdk-7']='java-1.7.0'
    ['openjdk-8']='java-1.8.0'
)

declare -A dcevm_download=(
	['openjdk-7']='https://github.com/dcevm/dcevm/releases/download/full-jdk7u79%2B7/DCEVM-full-7u79-installer.jar'
	['openjdk-8']='https://github.com/dcevm/dcevm/releases/download/light-jdk8u66%2B5/DCEVM-light-8u66-installer.jar'
)

generate_dockerfiles() {
    for tag in "${!java_tags[@]}"; do
        mkdir -p "${tag}"
    
        cat > "${tag}/Dockerfile" <<-EOF
#
# This Dockerfile is generated via "images/jre/update.sh"
#
# Please DO NOT edit it directly.
#

FROM openshift/base-centos7

MAINTAINER Camilo BermÃºdez <camilobermudez85@gmail.com>

ENV JAVA_VERSION="${java_tags[${tag}]}" \\
    JAVA_HOME="/usr/lib/jvm/${java_tags[${tag}]}-openjdk" \\
    JOLOKIA_VERSION="${JOLOKIA_VERSION}" \\
    JOLOKIA_DOWNLOAD="${JOLOKIA_DOWNLOAD}" \\
    JOLOKIA_HOST="${JOLOKIA_DEFAULT_HOST}" \\
    JOLOKIA_CONTEXT="${JOLOKIA_DEFAULT_CONTEXT}" \\
    JOLOKIA_DISCOVERY="${JOLOKIA_DEFAULT_DISCOVERY}" \\
    JOLOKIA_PORT="${JOLOKIA_PORT}" \\
    J4LOG_VERSION="${J4LOG_VERSION}" \\
    J4LOG_DOWNLOAD="${J4LOG_DOWNLOAD}" \\
    MAVEN_VERSION="${MAVEN_VERSION}" \\
    MAVEN_HOME="${MAVEN_HOME}" \\
    MAVEN_DOWNLOAD="${MAVEN_DOWNLOAD}" \\
    GRADLE_VERSION="${GRADLE_VERSION}" \\
    GRADLE_HOME="${GRADLE_HOME}" \\
    GRADLE_DOWNLOAD="${GRADLE_DOWNLOAD}" \\
    BUILDER_VERSION="${BUILDER_VERSION}" \\
    DCEVM_DOWNLOAD="${dcevm_download[${tag}]}" \\
    HOTSWAP_ZIP="${HOTSWAP_ZIP}" \\
    HOTSWAP_BASE="${HOTSWAP_BASE}" \\
    JDWP_SERVER="${JDWP_DEFAULT_SERVER}" \\
    JDWP_SUSPEND="${JDWP_DEFAULT_SUSPEND}" \\
    JDWP_ADDRESS="${JDWP_ADDRESS}" \\
    BUILD_OUTPUT_DIR="/opt/app-root/build-output-dir"

LABEL io.k8s.description="Image for building Java applications" \\
      io.k8s.display-name="Java Builder" \\
      io.openshift.tags="builder,java,${java_tags[${tag}]}"

EXPOSE "${JOLOKIA_PORT}"
EOF

        cat >> "${tag}/Dockerfile" <<-"EOF"

RUN set -x \
    && yum -y update && yum -y install "${JAVA_VERSION}-openjdk-devel" && yum -y clean all \
    && mkdir -p "${MAVEN_HOME}" \
    && curl -fsSL "${MAVEN_DOWNLOAD}" | tar -xzC "${MAVEN_HOME}" --strip-components=1 \
    && ln -s "${MAVEN_HOME}/bin/mvn" "/usr/bin/mvn" \
    && mkdir -p "${GRADLE_HOME}" && rm -rf "${GRADLE_HOME}" \
    && curl -sLO "${GRADLE_DOWNLOAD}" \
    && unzip "gradle-${GRADLE_VERSION}-all.zip" \
    && mv "gradle-${GRADLE_VERSION}" "$GRADLE_HOME" \
    && rm "gradle-${GRADLE_VERSION}-all.zip" \
    && ln -s "${GRADLE_HOME}/bin/gradle" "/usr/bin/gradle" \
    && curl -OL "${JOLOKIA_DOWNLOAD}" \
    && mv "jolokia-jvm-${JOLOKIA_VERSION}-agent.jar" "${JAVA_HOME}/bin" \
    && rm -f "jolokia-jvm-${JOLOKIA_VERSION}-agent.jar" \
    && curl -OL "${J4LOG_DOWNLOAD}" \
    && mv "j4log-agent-${J4LOG_VERSION}.jar" "${JAVA_HOME}/bin" \
    && rm -f "j4log-agent-${J4LOG_VERSION}.jar" \
    && curl -OL "${DCEVM_DOWNLOAD}" \
    && unzip DCEVM-*-installer.jar "linux_amd64_compiler2/product/libjvm.so" \
    && mv "linux_amd64_compiler2/product/libjvm.so" "${JAVA_HOME}/jre/lib/amd64/server/" \
    && rm -rf linux_amd64_compiler2 DCEVM* \
    && curl -OL "${HOTSWAP_BASE}/${HOTSWAP_ZIP}" \
    && unzip "${HOTSWAP_ZIP}" \
    && mv hotswap-agent.jar "${JAVA_HOME}/bin" \
    && rm "${HOTSWAP_ZIP}"  \
    && chown -R 1001:1001 /opt/app-root

COPY ./.s2i/bin/ ${STI_SCRIPTS_PATH}

USER 1001

CMD ["usage"]
EOF
        shopt -s dotglob
        cp -r ./.template/* "./${tag}" 
    done
}

generate_dockerfiles "$@";
